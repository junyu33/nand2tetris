function Math.init 0
push constant 16
call Array.new 1
pop static 0
push constant 0
return
function Math.abs 0
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
neg
return
label IF_FALSE0
push argument 0
return
function Math.getBit 0
push constant 0
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 16383
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 14
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 16384
sub
pop argument 0
label IF_FALSE0
push argument 0
push constant 8191
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 13
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 8192
sub
pop argument 0
label IF_FALSE1
push argument 0
push constant 4095
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 12
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 4096
sub
pop argument 0
label IF_FALSE2
push argument 0
push constant 2047
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 11
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 2048
sub
pop argument 0
label IF_FALSE3
push argument 0
push constant 1023
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 10
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 1024
sub
pop argument 0
label IF_FALSE4
push argument 0
push constant 511
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 9
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 512
sub
pop argument 0
label IF_FALSE5
push argument 0
push constant 255
gt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 8
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 256
sub
pop argument 0
label IF_FALSE6
push argument 0
push constant 127
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 7
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 128
sub
pop argument 0
label IF_FALSE7
push argument 0
push constant 63
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 6
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 64
sub
pop argument 0
label IF_FALSE8
push argument 0
push constant 31
gt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 5
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 32
sub
pop argument 0
label IF_FALSE9
push argument 0
push constant 15
gt
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 4
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 16
sub
pop argument 0
label IF_FALSE10
push argument 0
push constant 7
gt
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 3
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 8
sub
pop argument 0
label IF_FALSE11
push argument 0
push constant 3
gt
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 2
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 4
sub
pop argument 0
label IF_FALSE12
push argument 0
push constant 1
gt
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 1
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 2
sub
pop argument 0
label IF_FALSE13
push argument 0
push constant 0
gt
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 0
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE14
push argument 1
push static 0
add
pop pointer 1
push that 0
return
function Math.multiply 4
push constant 0
pop local 0
push constant 0
pop local 1
push argument 0
pop local 2
push constant 1
pop local 3
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
neg
pop argument 1
push constant 1
neg
pop local 3
label IF_FALSE0
label WHILE_EXP0
push local 1
push constant 16
lt
not
if-goto WHILE_END0
push argument 1
push local 1
call Math.getBit 2
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 2
add
pop local 0
label IF_FALSE1
push local 2
push local 2
add
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 3
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
neg
pop local 0
label IF_FALSE2
push local 0
return
function Math.divide 4
push constant 0
pop local 0
push constant 0
pop local 1
push constant 1
pop local 3
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
neg
pop argument 0
push local 3
push constant 1
neg
call Math.multiply 2
pop local 3
label IF_FALSE0
push argument 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
neg
pop argument 1
push local 3
push constant 1
neg
call Math.multiply 2
pop local 3
label IF_FALSE1
push argument 1
push argument 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push argument 0
push constant 2
push argument 1
call Math.multiply 2
call Math.divide 2
push local 3
call Math.multiply 2
pop local 2
push argument 0
push constant 2
push local 2
call Math.multiply 2
push argument 1
call Math.multiply 2
sub
push argument 1
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 2
push local 2
call Math.multiply 2
return
label IF_FALSE3
push constant 2
push local 2
call Math.multiply 2
push constant 1
add
return
function Math.sqrt 1
push constant 0
pop local 0
push local 0
push constant 128
add
push local 0
push constant 128
add
call Math.multiply 2
push constant 1
sub
push argument 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 128
add
push local 0
push constant 128
add
call Math.multiply 2
push constant 1
sub
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 128
add
pop local 0
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 64
add
push local 0
push constant 64
add
call Math.multiply 2
push constant 1
sub
push argument 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push constant 64
add
push local 0
push constant 64
add
call Math.multiply 2
push constant 1
sub
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 64
add
pop local 0
label IF_FALSE3
label IF_FALSE2
push local 0
push constant 32
add
push local 0
push constant 32
add
call Math.multiply 2
push constant 1
sub
push argument 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 32
add
push local 0
push constant 32
add
call Math.multiply 2
push constant 1
sub
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push constant 32
add
pop local 0
label IF_FALSE5
label IF_FALSE4
push local 0
push constant 16
add
push local 0
push constant 16
add
call Math.multiply 2
push constant 1
sub
push argument 0
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
push constant 16
add
push local 0
push constant 16
add
call Math.multiply 2
push constant 1
sub
push constant 0
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
push constant 16
add
pop local 0
label IF_FALSE7
label IF_FALSE6
push local 0
push constant 8
add
push local 0
push constant 8
add
call Math.multiply 2
push constant 1
sub
push argument 0
lt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
push constant 8
add
push local 0
push constant 8
add
call Math.multiply 2
push constant 1
sub
push constant 0
gt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 0
push constant 8
add
pop local 0
label IF_FALSE9
label IF_FALSE8
push local 0
push constant 4
add
push local 0
push constant 4
add
call Math.multiply 2
push constant 1
sub
push argument 0
lt
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 0
push constant 4
add
push local 0
push constant 4
add
call Math.multiply 2
push constant 1
sub
push constant 0
gt
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 0
push constant 4
add
pop local 0
label IF_FALSE11
label IF_FALSE10
push local 0
push constant 2
add
push local 0
push constant 2
add
call Math.multiply 2
push constant 1
sub
push argument 0
lt
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 0
push constant 2
add
push local 0
push constant 2
add
call Math.multiply 2
push constant 1
sub
push constant 0
gt
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push local 0
push constant 2
add
pop local 0
label IF_FALSE13
label IF_FALSE12
push local 0
push constant 1
add
push local 0
push constant 1
add
call Math.multiply 2
push constant 1
sub
push argument 0
lt
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push local 0
push constant 1
add
push local 0
push constant 1
add
call Math.multiply 2
push constant 1
sub
push constant 0
gt
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push local 0
push constant 1
add
pop local 0
label IF_FALSE15
label IF_FALSE14
push local 0
return
function Math.max 0
push argument 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 1
return
function Math.min 0
push argument 0
push argument 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 1
return
